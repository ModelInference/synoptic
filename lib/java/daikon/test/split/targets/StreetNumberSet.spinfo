REPLACE
size()
((high-low)>> 1)+ 1
toString()
"" + low + "-" + high
union(String numbers)
union(givenNumbers)

PPT_NAME MapQuick1.SimpleParitySet.SimpleParitySet
(low & 1)!=(high & 1)
orig((low & 1)!=(high & 1))

PPT_NAME MapQuick1.SimpleParitySet.contains
(low & 1)!=(i & 1)
false
false
false
i < low
i > high
orig((low & 1)!=(i & 1))
orig(false)
orig(false)
orig(false)
orig(i < low)
orig(i > high)
orig(true)
true

PPT_NAME MapQuick1.SimpleParitySet.orderStatistic
i <= low
i > high
orig(i <= low)
orig(i > high)

PPT_NAME MapQuick1.StreetNumberSet.StreetNumberSet
dashLoc == -1
items.hasMoreTokens()
orig(dashLoc == -1)
orig(items.hasMoreTokens())

PPT_NAME MapQuick1.StreetNumberSet.checkRep
i<sets.length
orig(i<sets.length)

PPT_NAME MapQuick1.StreetNumberSet.contains
false
i<sets.length
orig(false)
orig(i<sets.length)
orig(sets[i].contains(sn))
orig(true)
sets[i].contains(sn)
true

PPT_NAME MapQuick1.StreetNumberSet.orderStatistic
i<sets.length
orig(i<sets.length)

PPT_NAME MapQuick1.StreetNumberSet.size
i<sets.length
orig(i<sets.length)

PPT_NAME MapQuick1.StreetNumberSet.toString
i < sets.length-1
i<sets.length
orig(i < sets.length-1)
orig(i<sets.length)

