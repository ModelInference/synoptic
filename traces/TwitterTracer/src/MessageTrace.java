// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: message_trace.proto

public final class MessageTrace {
    private MessageTrace() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
    }

    public static final class WrappedMessage extends
            com.google.protobuf.GeneratedMessage {
        // Use WrappedMessage.newBuilder() to construct.
        private WrappedMessage() {
            initFields();
        }

        private WrappedMessage(boolean noInit) {
        }

        private static final WrappedMessage defaultInstance;

        public static WrappedMessage getDefaultInstance() {
            return defaultInstance;
        }

        public WrappedMessage getDefaultInstanceForType() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return trace.MessageTrace.internal_static_trace_WrappedMessage_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return trace.MessageTrace.internal_static_trace_WrappedMessage_fieldAccessorTable;
        }

        // optional fixed32 src = 1;
        public static final int SRC_FIELD_NUMBER = 1;
        private boolean hasSrc;
        private int src_ = 0;

        public boolean hasSrc() {
            return hasSrc;
        }

        public int getSrc() {
            return src_;
        }

        // optional fixed32 dst = 2;
        public static final int DST_FIELD_NUMBER = 2;
        private boolean hasDst;
        private int dst_ = 0;

        public boolean hasDst() {
            return hasDst;
        }

        public int getDst() {
            return dst_;
        }

        // optional int64 timestamp = 3;
        public static final int TIMESTAMP_FIELD_NUMBER = 3;
        private boolean hasTimestamp;
        private long timestamp_ = 0L;

        public boolean hasTimestamp() {
            return hasTimestamp;
        }

        public long getTimestamp() {
            return timestamp_;
        }

        // optional string type = 4;
        public static final int TYPE_FIELD_NUMBER = 4;
        private boolean hasType;
        private java.lang.String type_ = "";

        public boolean hasType() {
            return hasType;
        }

        public java.lang.String getType() {
            return type_;
        }

        // optional bytes the_message = 5;
        public static final int THE_MESSAGE_FIELD_NUMBER = 5;
        private boolean hasTheMessage;
        private com.google.protobuf.ByteString theMessage_ = com.google.protobuf.ByteString.EMPTY;

        public boolean hasTheMessage() {
            return hasTheMessage;
        }

        public com.google.protobuf.ByteString getTheMessage() {
            return theMessage_;
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (hasSrc()) {
                output.writeFixed32(1, getSrc());
            }
            if (hasDst()) {
                output.writeFixed32(2, getDst());
            }
            if (hasTimestamp()) {
                output.writeInt64(3, getTimestamp());
            }
            if (hasType()) {
                output.writeString(4, getType());
            }
            if (hasTheMessage()) {
                output.writeBytes(5, getTheMessage());
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1)
                return size;

            size = 0;
            if (hasSrc()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, getSrc());
            }
            if (hasDst()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, getDst());
            }
            if (hasTimestamp()) {
                size += com.google.protobuf.CodedOutputStream.computeInt64Size(
                        3, getTimestamp());
            }
            if (hasType()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(4, getType());
            }
            if (hasTheMessage()) {
                size += com.google.protobuf.CodedOutputStream.computeBytesSize(
                        5, getTheMessage());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        public static trace.MessageTrace.WrappedMessage parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static trace.MessageTrace.WrappedMessage parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static trace.MessageTrace.WrappedMessage parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static trace.MessageTrace.WrappedMessage parseFrom(byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static trace.MessageTrace.WrappedMessage parseFrom(
                java.io.InputStream input) throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static trace.MessageTrace.WrappedMessage parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static trace.MessageTrace.WrappedMessage parseDelimitedFrom(
                java.io.InputStream input) throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static trace.MessageTrace.WrappedMessage parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static trace.MessageTrace.WrappedMessage parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static trace.MessageTrace.WrappedMessage parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(
                trace.MessageTrace.WrappedMessage prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> {
            private trace.MessageTrace.WrappedMessage result;

            // Construct using trace.MessageTrace.WrappedMessage.newBuilder()
            private Builder() {
            }

            private static Builder create() {
                Builder builder = new Builder();
                builder.result = new trace.MessageTrace.WrappedMessage();
                return builder;
            }

            protected trace.MessageTrace.WrappedMessage internalGetResult() {
                return result;
            }

            public Builder clear() {
                if (result == null) {
                    throw new IllegalStateException(
                            "Cannot call clear() after build().");
                }
                result = new trace.MessageTrace.WrappedMessage();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(result);
            }

            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return trace.MessageTrace.WrappedMessage.getDescriptor();
            }

            public trace.MessageTrace.WrappedMessage getDefaultInstanceForType() {
                return trace.MessageTrace.WrappedMessage.getDefaultInstance();
            }

            public boolean isInitialized() {
                return result.isInitialized();
            }

            public trace.MessageTrace.WrappedMessage build() {
                if (result != null && !isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return buildPartial();
            }

            private trace.MessageTrace.WrappedMessage buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                if (!isInitialized()) {
                    throw newUninitializedMessageException(result)
                            .asInvalidProtocolBufferException();
                }
                return buildPartial();
            }

            public trace.MessageTrace.WrappedMessage buildPartial() {
                if (result == null) {
                    throw new IllegalStateException(
                            "build() has already been called on this Builder.");
                }
                trace.MessageTrace.WrappedMessage returnMe = result;
                result = null;
                return returnMe;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof trace.MessageTrace.WrappedMessage) {
                    return mergeFrom((trace.MessageTrace.WrappedMessage) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(trace.MessageTrace.WrappedMessage other) {
                if (other == trace.MessageTrace.WrappedMessage
                        .getDefaultInstance())
                    return this;
                if (other.hasSrc()) {
                    setSrc(other.getSrc());
                }
                if (other.hasDst()) {
                    setDst(other.getDst());
                }
                if (other.hasTimestamp()) {
                    setTimestamp(other.getTimestamp());
                }
                if (other.hasType()) {
                    setType(other.getType());
                }
                if (other.hasTheMessage()) {
                    setTheMessage(other.getTheMessage());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
                        .newBuilder(this.getUnknownFields());
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                    case 0:
                        this.setUnknownFields(unknownFields.build());
                        return this;
                    default: {
                        if (!parseUnknownField(input, unknownFields,
                                extensionRegistry, tag)) {
                            this.setUnknownFields(unknownFields.build());
                            return this;
                        }
                        break;
                    }
                    case 13: {
                        setSrc(input.readFixed32());
                        break;
                    }
                    case 21: {
                        setDst(input.readFixed32());
                        break;
                    }
                    case 24: {
                        setTimestamp(input.readInt64());
                        break;
                    }
                    case 34: {
                        setType(input.readString());
                        break;
                    }
                    case 42: {
                        setTheMessage(input.readBytes());
                        break;
                    }
                    }
                }
            }

            // optional fixed32 src = 1;
            public boolean hasSrc() {
                return result.hasSrc();
            }

            public int getSrc() {
                return result.getSrc();
            }

            public Builder setSrc(int value) {
                result.hasSrc = true;
                result.src_ = value;
                return this;
            }

            public Builder clearSrc() {
                result.hasSrc = false;
                result.src_ = 0;
                return this;
            }

            // optional fixed32 dst = 2;
            public boolean hasDst() {
                return result.hasDst();
            }

            public int getDst() {
                return result.getDst();
            }

            public Builder setDst(int value) {
                result.hasDst = true;
                result.dst_ = value;
                return this;
            }

            public Builder clearDst() {
                result.hasDst = false;
                result.dst_ = 0;
                return this;
            }

            // optional int64 timestamp = 3;
            public boolean hasTimestamp() {
                return result.hasTimestamp();
            }

            public long getTimestamp() {
                return result.getTimestamp();
            }

            public Builder setTimestamp(long value) {
                result.hasTimestamp = true;
                result.timestamp_ = value;
                return this;
            }

            public Builder clearTimestamp() {
                result.hasTimestamp = false;
                result.timestamp_ = 0L;
                return this;
            }

            // optional string type = 4;
            public boolean hasType() {
                return result.hasType();
            }

            public java.lang.String getType() {
                return result.getType();
            }

            public Builder setType(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                result.hasType = true;
                result.type_ = value;
                return this;
            }

            public Builder clearType() {
                result.hasType = false;
                result.type_ = getDefaultInstance().getType();
                return this;
            }

            // optional bytes the_message = 5;
            public boolean hasTheMessage() {
                return result.hasTheMessage();
            }

            public com.google.protobuf.ByteString getTheMessage() {
                return result.getTheMessage();
            }

            public Builder setTheMessage(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                result.hasTheMessage = true;
                result.theMessage_ = value;
                return this;
            }

            public Builder clearTheMessage() {
                result.hasTheMessage = false;
                result.theMessage_ = getDefaultInstance().getTheMessage();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:trace.WrappedMessage)
        }

        static {
            defaultInstance = new WrappedMessage(true);
            trace.MessageTrace.internalForceInit();
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:trace.WrappedMessage)
    }

    public static final class FullTrace extends
            com.google.protobuf.GeneratedMessage {
        // Use FullTrace.newBuilder() to construct.
        private FullTrace() {
            initFields();
        }

        private FullTrace(boolean noInit) {
        }

        private static final FullTrace defaultInstance;

        public static FullTrace getDefaultInstance() {
            return defaultInstance;
        }

        public FullTrace getDefaultInstanceForType() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return trace.MessageTrace.internal_static_trace_FullTrace_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return trace.MessageTrace.internal_static_trace_FullTrace_fieldAccessorTable;
        }

        // repeated .trace.WrappedMessage wrapped_message = 1;
        public static final int WRAPPED_MESSAGE_FIELD_NUMBER = 1;
        private java.util.List<trace.MessageTrace.WrappedMessage> wrappedMessage_ = java.util.Collections
                .emptyList();

        public java.util.List<trace.MessageTrace.WrappedMessage> getWrappedMessageList() {
            return wrappedMessage_;
        }

        public int getWrappedMessageCount() {
            return wrappedMessage_.size();
        }

        public trace.MessageTrace.WrappedMessage getWrappedMessage(int index) {
            return wrappedMessage_.get(index);
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            for (trace.MessageTrace.WrappedMessage element : getWrappedMessageList()) {
                output.writeMessage(1, element);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1)
                return size;

            size = 0;
            for (trace.MessageTrace.WrappedMessage element : getWrappedMessageList()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, element);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        public static trace.MessageTrace.FullTrace parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static trace.MessageTrace.FullTrace parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static trace.MessageTrace.FullTrace parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static trace.MessageTrace.FullTrace parseFrom(byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static trace.MessageTrace.FullTrace parseFrom(
                java.io.InputStream input) throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static trace.MessageTrace.FullTrace parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static trace.MessageTrace.FullTrace parseDelimitedFrom(
                java.io.InputStream input) throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static trace.MessageTrace.FullTrace parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static trace.MessageTrace.FullTrace parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static trace.MessageTrace.FullTrace parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(trace.MessageTrace.FullTrace prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> {
            private trace.MessageTrace.FullTrace result;

            // Construct using trace.MessageTrace.FullTrace.newBuilder()
            private Builder() {
            }

            private static Builder create() {
                Builder builder = new Builder();
                builder.result = new trace.MessageTrace.FullTrace();
                return builder;
            }

            protected trace.MessageTrace.FullTrace internalGetResult() {
                return result;
            }

            public Builder clear() {
                if (result == null) {
                    throw new IllegalStateException(
                            "Cannot call clear() after build().");
                }
                result = new trace.MessageTrace.FullTrace();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(result);
            }

            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return trace.MessageTrace.FullTrace.getDescriptor();
            }

            public trace.MessageTrace.FullTrace getDefaultInstanceForType() {
                return trace.MessageTrace.FullTrace.getDefaultInstance();
            }

            public boolean isInitialized() {
                return result.isInitialized();
            }

            public trace.MessageTrace.FullTrace build() {
                if (result != null && !isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return buildPartial();
            }

            private trace.MessageTrace.FullTrace buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                if (!isInitialized()) {
                    throw newUninitializedMessageException(result)
                            .asInvalidProtocolBufferException();
                }
                return buildPartial();
            }

            public trace.MessageTrace.FullTrace buildPartial() {
                if (result == null) {
                    throw new IllegalStateException(
                            "build() has already been called on this Builder.");
                }
                if (result.wrappedMessage_ != java.util.Collections.EMPTY_LIST) {
                    result.wrappedMessage_ = java.util.Collections
                            .unmodifiableList(result.wrappedMessage_);
                }
                trace.MessageTrace.FullTrace returnMe = result;
                result = null;
                return returnMe;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof trace.MessageTrace.FullTrace) {
                    return mergeFrom((trace.MessageTrace.FullTrace) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(trace.MessageTrace.FullTrace other) {
                if (other == trace.MessageTrace.FullTrace.getDefaultInstance())
                    return this;
                if (!other.wrappedMessage_.isEmpty()) {
                    if (result.wrappedMessage_.isEmpty()) {
                        result.wrappedMessage_ = new java.util.ArrayList<trace.MessageTrace.WrappedMessage>();
                    }
                    result.wrappedMessage_.addAll(other.wrappedMessage_);
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
                        .newBuilder(this.getUnknownFields());
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                    case 0:
                        this.setUnknownFields(unknownFields.build());
                        return this;
                    default: {
                        if (!parseUnknownField(input, unknownFields,
                                extensionRegistry, tag)) {
                            this.setUnknownFields(unknownFields.build());
                            return this;
                        }
                        break;
                    }
                    case 10: {
                        trace.MessageTrace.WrappedMessage.Builder subBuilder = trace.MessageTrace.WrappedMessage
                                .newBuilder();
                        input.readMessage(subBuilder, extensionRegistry);
                        addWrappedMessage(subBuilder.buildPartial());
                        break;
                    }
                    }
                }
            }

            // repeated .trace.WrappedMessage wrapped_message = 1;
            public java.util.List<trace.MessageTrace.WrappedMessage> getWrappedMessageList() {
                return java.util.Collections
                        .unmodifiableList(result.wrappedMessage_);
            }

            public int getWrappedMessageCount() {
                return result.getWrappedMessageCount();
            }

            public trace.MessageTrace.WrappedMessage getWrappedMessage(int index) {
                return result.getWrappedMessage(index);
            }

            public Builder setWrappedMessage(int index,
                    trace.MessageTrace.WrappedMessage value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                result.wrappedMessage_.set(index, value);
                return this;
            }

            public Builder setWrappedMessage(int index,
                    trace.MessageTrace.WrappedMessage.Builder builderForValue) {
                result.wrappedMessage_.set(index, builderForValue.build());
                return this;
            }

            public Builder addWrappedMessage(
                    trace.MessageTrace.WrappedMessage value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                if (result.wrappedMessage_.isEmpty()) {
                    result.wrappedMessage_ = new java.util.ArrayList<trace.MessageTrace.WrappedMessage>();
                }
                result.wrappedMessage_.add(value);
                return this;
            }

            public Builder addWrappedMessage(
                    trace.MessageTrace.WrappedMessage.Builder builderForValue) {
                if (result.wrappedMessage_.isEmpty()) {
                    result.wrappedMessage_ = new java.util.ArrayList<trace.MessageTrace.WrappedMessage>();
                }
                result.wrappedMessage_.add(builderForValue.build());
                return this;
            }

            public Builder addAllWrappedMessage(
                    java.lang.Iterable<? extends trace.MessageTrace.WrappedMessage> values) {
                if (result.wrappedMessage_.isEmpty()) {
                    result.wrappedMessage_ = new java.util.ArrayList<trace.MessageTrace.WrappedMessage>();
                }
                super.addAll(values, result.wrappedMessage_);
                return this;
            }

            public Builder clearWrappedMessage() {
                result.wrappedMessage_ = java.util.Collections.emptyList();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:trace.FullTrace)
        }

        static {
            defaultInstance = new FullTrace(true);
            trace.MessageTrace.internalForceInit();
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:trace.FullTrace)
    }

    public static final class TraceSet extends
            com.google.protobuf.GeneratedMessage {
        // Use TraceSet.newBuilder() to construct.
        private TraceSet() {
            initFields();
        }

        private TraceSet(boolean noInit) {
        }

        private static final TraceSet defaultInstance;

        public static TraceSet getDefaultInstance() {
            return defaultInstance;
        }

        public TraceSet getDefaultInstanceForType() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return trace.MessageTrace.internal_static_trace_TraceSet_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return trace.MessageTrace.internal_static_trace_TraceSet_fieldAccessorTable;
        }

        // repeated .trace.FullTrace full_trace = 1;
        public static final int FULL_TRACE_FIELD_NUMBER = 1;
        private java.util.List<trace.MessageTrace.FullTrace> fullTrace_ = java.util.Collections
                .emptyList();

        public java.util.List<trace.MessageTrace.FullTrace> getFullTraceList() {
            return fullTrace_;
        }

        public int getFullTraceCount() {
            return fullTrace_.size();
        }

        public trace.MessageTrace.FullTrace getFullTrace(int index) {
            return fullTrace_.get(index);
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            for (trace.MessageTrace.FullTrace element : getFullTraceList()) {
                output.writeMessage(1, element);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1)
                return size;

            size = 0;
            for (trace.MessageTrace.FullTrace element : getFullTraceList()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, element);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        public static trace.MessageTrace.TraceSet parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static trace.MessageTrace.TraceSet parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static trace.MessageTrace.TraceSet parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static trace.MessageTrace.TraceSet parseFrom(byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static trace.MessageTrace.TraceSet parseFrom(
                java.io.InputStream input) throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static trace.MessageTrace.TraceSet parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static trace.MessageTrace.TraceSet parseDelimitedFrom(
                java.io.InputStream input) throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static trace.MessageTrace.TraceSet parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static trace.MessageTrace.TraceSet parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static trace.MessageTrace.TraceSet parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(trace.MessageTrace.TraceSet prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> {
            private trace.MessageTrace.TraceSet result;

            // Construct using trace.MessageTrace.TraceSet.newBuilder()
            private Builder() {
            }

            private static Builder create() {
                Builder builder = new Builder();
                builder.result = new trace.MessageTrace.TraceSet();
                return builder;
            }

            protected trace.MessageTrace.TraceSet internalGetResult() {
                return result;
            }

            public Builder clear() {
                if (result == null) {
                    throw new IllegalStateException(
                            "Cannot call clear() after build().");
                }
                result = new trace.MessageTrace.TraceSet();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(result);
            }

            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return trace.MessageTrace.TraceSet.getDescriptor();
            }

            public trace.MessageTrace.TraceSet getDefaultInstanceForType() {
                return trace.MessageTrace.TraceSet.getDefaultInstance();
            }

            public boolean isInitialized() {
                return result.isInitialized();
            }

            public trace.MessageTrace.TraceSet build() {
                if (result != null && !isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return buildPartial();
            }

            private trace.MessageTrace.TraceSet buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                if (!isInitialized()) {
                    throw newUninitializedMessageException(result)
                            .asInvalidProtocolBufferException();
                }
                return buildPartial();
            }

            public trace.MessageTrace.TraceSet buildPartial() {
                if (result == null) {
                    throw new IllegalStateException(
                            "build() has already been called on this Builder.");
                }
                if (result.fullTrace_ != java.util.Collections.EMPTY_LIST) {
                    result.fullTrace_ = java.util.Collections
                            .unmodifiableList(result.fullTrace_);
                }
                trace.MessageTrace.TraceSet returnMe = result;
                result = null;
                return returnMe;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof trace.MessageTrace.TraceSet) {
                    return mergeFrom((trace.MessageTrace.TraceSet) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(trace.MessageTrace.TraceSet other) {
                if (other == trace.MessageTrace.TraceSet.getDefaultInstance())
                    return this;
                if (!other.fullTrace_.isEmpty()) {
                    if (result.fullTrace_.isEmpty()) {
                        result.fullTrace_ = new java.util.ArrayList<trace.MessageTrace.FullTrace>();
                    }
                    result.fullTrace_.addAll(other.fullTrace_);
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
                        .newBuilder(this.getUnknownFields());
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                    case 0:
                        this.setUnknownFields(unknownFields.build());
                        return this;
                    default: {
                        if (!parseUnknownField(input, unknownFields,
                                extensionRegistry, tag)) {
                            this.setUnknownFields(unknownFields.build());
                            return this;
                        }
                        break;
                    }
                    case 10: {
                        trace.MessageTrace.FullTrace.Builder subBuilder = trace.MessageTrace.FullTrace
                                .newBuilder();
                        input.readMessage(subBuilder, extensionRegistry);
                        addFullTrace(subBuilder.buildPartial());
                        break;
                    }
                    }
                }
            }

            // repeated .trace.FullTrace full_trace = 1;
            public java.util.List<trace.MessageTrace.FullTrace> getFullTraceList() {
                return java.util.Collections
                        .unmodifiableList(result.fullTrace_);
            }

            public int getFullTraceCount() {
                return result.getFullTraceCount();
            }

            public trace.MessageTrace.FullTrace getFullTrace(int index) {
                return result.getFullTrace(index);
            }

            public Builder setFullTrace(int index,
                    trace.MessageTrace.FullTrace value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                result.fullTrace_.set(index, value);
                return this;
            }

            public Builder setFullTrace(int index,
                    trace.MessageTrace.FullTrace.Builder builderForValue) {
                result.fullTrace_.set(index, builderForValue.build());
                return this;
            }

            public Builder addFullTrace(trace.MessageTrace.FullTrace value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                if (result.fullTrace_.isEmpty()) {
                    result.fullTrace_ = new java.util.ArrayList<trace.MessageTrace.FullTrace>();
                }
                result.fullTrace_.add(value);
                return this;
            }

            public Builder addFullTrace(
                    trace.MessageTrace.FullTrace.Builder builderForValue) {
                if (result.fullTrace_.isEmpty()) {
                    result.fullTrace_ = new java.util.ArrayList<trace.MessageTrace.FullTrace>();
                }
                result.fullTrace_.add(builderForValue.build());
                return this;
            }

            public Builder addAllFullTrace(
                    java.lang.Iterable<? extends trace.MessageTrace.FullTrace> values) {
                if (result.fullTrace_.isEmpty()) {
                    result.fullTrace_ = new java.util.ArrayList<trace.MessageTrace.FullTrace>();
                }
                super.addAll(values, result.fullTrace_);
                return this;
            }

            public Builder clearFullTrace() {
                result.fullTrace_ = java.util.Collections.emptyList();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:trace.TraceSet)
        }

        static {
            defaultInstance = new TraceSet(true);
            trace.MessageTrace.internalForceInit();
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:trace.TraceSet)
    }

    private static com.google.protobuf.Descriptors.Descriptor internal_static_trace_WrappedMessage_descriptor;
    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_trace_WrappedMessage_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor internal_static_trace_FullTrace_descriptor;
    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_trace_FullTrace_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor internal_static_trace_TraceSet_descriptor;
    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_trace_TraceSet_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor descriptor;
    static {
        java.lang.String[] descriptorData = { "\n\023message_trace.proto\022\005trace\"`\n\016WrappedM"
                + "essage\022\013\n\003src\030\001 \001(\007\022\013\n\003dst\030\002 \001(\007\022\021\n\ttime"
                + "stamp\030\003 \001(\003\022\014\n\004type\030\004 \001(\t\022\023\n\013the_message"
                + "\030\005 \001(\014\";\n\tFullTrace\022.\n\017wrapped_message\030\001"
                + " \003(\0132\025.trace.WrappedMessage\"0\n\010TraceSet\022"
                + "$\n\nfull_trace\030\001 \003(\0132\020.trace.FullTraceB\025\n"
                + "\005traceB\014MessageTrace" };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner = new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
            public com.google.protobuf.ExtensionRegistry assignDescriptors(
                    com.google.protobuf.Descriptors.FileDescriptor root) {
                descriptor = root;
                internal_static_trace_WrappedMessage_descriptor = getDescriptor()
                        .getMessageTypes().get(0);
                internal_static_trace_WrappedMessage_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_trace_WrappedMessage_descriptor,
                        new java.lang.String[] { "Src", "Dst", "Timestamp",
                                "Type", "TheMessage", },
                        trace.MessageTrace.WrappedMessage.class,
                        trace.MessageTrace.WrappedMessage.Builder.class);
                internal_static_trace_FullTrace_descriptor = getDescriptor()
                        .getMessageTypes().get(1);
                internal_static_trace_FullTrace_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_trace_FullTrace_descriptor,
                        new java.lang.String[] { "WrappedMessage", },
                        trace.MessageTrace.FullTrace.class,
                        trace.MessageTrace.FullTrace.Builder.class);
                internal_static_trace_TraceSet_descriptor = getDescriptor()
                        .getMessageTypes().get(2);
                internal_static_trace_TraceSet_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                        internal_static_trace_TraceSet_descriptor,
                        new java.lang.String[] { "FullTrace", },
                        trace.MessageTrace.TraceSet.class,
                        trace.MessageTrace.TraceSet.Builder.class);
                return null;
            }
        };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(
                        descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[] {},
                        assigner);
    }

    public static void internalForceInit() {
    }

    // @@protoc_insertion_point(outer_class_scope)
}
